{"version":3,"sources":["views/NotFound.js","views/Pets.js","views/Pet.js","views/NewPet.js","views/EditPet.js","App.js","serviceWorker.js","index.js"],"names":["NotFound","props","Pets","useState","pets","setPets","useEffect","fetchPets","i","length","axios","get","then","res","console","log","data","catch","err","response","width","sort","a","b","petA","type","toUpperCase","petB","order","map","pet","key","_id","name","to","Pet","setPet","fetchData","id","description","skill1","skill2","skill3","onClick","event","delId","delete","navigate","NewPet","setName","setType","setDescription","setSkill1","setSkill2","setSkill3","errors","setErrors","onSubmit","preventDefault","newPet","post","hasOwnProperty","handleSubmit","onChange","target","value","style","color","marginLeft","properties","message","EditPet","petFromDb","editedPet","put","App","className","noThrow","from","default","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.be26bcf7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst NotFound = (props) => {\r\n    return <div>This page was not found, sorry!</div>;\r\n\r\n};\r\n\r\nexport default NotFound;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"@reach/router\";\r\n\r\nconst Pets = (props) => {\r\n    const [pets, setPets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchPets();\r\n    }, []);\r\n\r\n    for (let i = 0; i < pets.length; i++) {\r\n\r\n\r\n    }\r\n\r\n    const fetchPets = () => {\r\n        axios.get(\"http://localhost:8000/api/exam\")\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setPets(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    };\r\n\r\n    const reorder = (a, b) => {\r\n        const petA = a.type.toUpperCase();\r\n        const petB = b.type.toUpperCase();\r\n        let order = 0;\r\n        if (petA > petB) {\r\n            order = 1;\r\n        }\r\n        else if (petA < petB) {\r\n            order = -1;\r\n        }\r\n        return order;\r\n    }\r\n\r\n    return (<div>\r\n        <h1>Pet Shelter</h1>\r\n        <p>These pets are looking for a good home</p>\r\n\r\n        <table width=\"80%\">\r\n            <tr>\r\n                <th>Name</th>\r\n                <th>Type</th>\r\n                <th>Actions</th>\r\n            </tr>\r\n            {pets.sort(reorder).map((pet) => {\r\n                return (<tr key={pet._id}>\r\n                    <td>{pet.name}</td>\r\n                    <td>{pet.type}</td>\r\n                    <td> <Link to={`/exam/${pet._id}`}>Details</Link> | <Link to={`/exam/${pet._id}/edit`}>Edit</Link></td>\r\n                </tr>\r\n                );\r\n            })\r\n\r\n            }\r\n        </table>\r\n    </div >\r\n    );\r\n};\r\n\r\nexport default Pets;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nconst handleDelete = (id) => { };\r\n\r\nconst Pet = (props) => {\r\n    const [pet, setPet] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    });\r\n\r\n    const fetchData = () => {\r\n        axios.get(`http://localhost:8000/api/exam/${props.id}`)\r\n            .then((res) => {\r\n                setPet(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            })\r\n    };\r\n\r\n    const handleDelete = (delId) => {\r\n        axios.delete(\"http://localhost:8000/api/exam/\" + delId)\r\n            .then((res) => {\r\n                navigate(\"/exam\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            })\r\n    };\r\n\r\n    if (pet === null) {\r\n        return \"Loading...\";\r\n    }\r\n    return (\r\n        <div>\r\n            <table>\r\n                <tr>\r\n                    <td>Details about:</td>\r\n                    <td> {pet.name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Pet Type:</td>\r\n                    <td> {pet.type}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Description:</td>\r\n                    <td> {pet.description}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td>Skills:</td>\r\n                    <td>{pet.skill1} <br />{pet.skill2}<br />{pet.skill3}  </td>\r\n                    <td></td>\r\n\r\n                </tr>\r\n            </table>\r\n            <button onClick={(event) => {\r\n                handleDelete(pet._id)\r\n            }}>Adopt {pet.name}</button>\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\nexport default Pet;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nconst NewPet = (props) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const newPet = {\r\n            name,\r\n            type,\r\n            description,\r\n            skill1,\r\n            skill2,\r\n            skill3,\r\n        };\r\n\r\n        axios.post(\"http://localhost:8000/api/exam\", newPet)\r\n            .then((res) => {\r\n                navigate(\"/exam\");\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data.hasOwnProperty(\"errors\")) {\r\n                    setErrors(err.response.data.errors);\r\n                }\r\n                console.log(err.response);\r\n            });\r\n    };\r\n\r\n    return <div>\r\n        <form onSubmit={(event) => { handleSubmit(event); }}>\r\n            <div>\r\n                <label>Name</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setName(event.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={name}\r\n                />\r\n                {errors.name ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.name.properties.message}</span> : \"\"}\r\n            </div>\r\n            <div>\r\n                <label>Type</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setType(event.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={type}\r\n                />\r\n                {errors.type ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.type.properties.message}</span> : \"\"}\r\n            </div>\r\n            <div>\r\n                <label>Description</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setDescription(event.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={description}\r\n                />\r\n                {errors.description ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.description.properties.message}</span> : \"\"}\r\n            </div>\r\n            <div>\r\n                <label>Skill 1</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setSkill1(event.target.value);\r\n                    }}\r\n                    type={\"\"}\r\n                    value={skill1}\r\n                />\r\n                {errors.skill1 ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.skill1.properties.message}</span> : \"\"}\r\n            </div>\r\n            <div>\r\n                <label>Skill 2</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setSkill2(event.target.value);\r\n                    }}\r\n                    type={\"\"}\r\n                    value={skill2}\r\n                />\r\n                {errors.skill2 ? (<span style={{ color: \"red\", marginLeft: 10 }}>{errors.skill2.properties.message}</span>) : (\"\")}\r\n            </div>\r\n            <div>\r\n                <label>Skill 3</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setSkill3(event.target.value);\r\n                    }}\r\n                    type={\"\"}\r\n                    value={skill3}\r\n                />\r\n                {errors.skill3 ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.skill3.properties.message}</span> : \"\"}\r\n            </div>\r\n            <button>Submit</button>\r\n        </form>\r\n\r\n    </div>;\r\n\r\n};\r\n\r\nexport default NewPet;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nconst EditPet = (props) => {\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    const fetchData = () => {\r\n        axios.get(`http://localhost:8000/api/exam/${props.id}`)\r\n            .then((res) => {\r\n                const petFromDb = res.data;\r\n                setName(petFromDb.name);\r\n                setType(petFromDb.type);\r\n                setDescription(petFromDb.description);\r\n                setSkill1(petFromDb.skill1);\r\n                setSkill2(petFromDb.skill2);\r\n                setSkill3(petFromDb.skill3);\r\n            })\r\n            .catch((err) => {\r\n                setErrors(err.data.errors);\r\n                console.log(err.response);\r\n            })\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const editedPet = {\r\n            name: name,\r\n            type,\r\n            description,\r\n            skill1,\r\n            skill2,\r\n            skill3,\r\n        };\r\n\r\n        axios.put(`http://localhost:8000/api/exam/${props.id}`, editedPet)\r\n            .then((res) => {\r\n                navigate(\"/exam\");\r\n            })\r\n            .catch((err) => {\r\n                if (err.response.data.hasOwnProperty(\"errors\")) {\r\n                    setErrors(err.response.data.errors);\r\n                }\r\n                console.log(err.response);\r\n            });\r\n    };\r\n\r\n    return <div>\r\n        <form onSubmit={(event) => { handleSubmit(event); }}>\r\n            <div>\r\n                <label>Name</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setName(event.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={name}\r\n                />\r\n                {errors.name ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.name.properties.message}</span> : \"\"}\r\n            </div>\r\n            <div>\r\n                <label>Type</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setType(event.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={type}\r\n                />\r\n                {errors.type ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.type.properties.message}</span> : \"\"}\r\n            </div>\r\n            <div>\r\n                <label>Description</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setDescription(event.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={description}\r\n                />\r\n                {errors.description ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.description.properties.message}</span> : \"\"}\r\n            </div>\r\n            <div>\r\n                <label>Skill 1</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setSkill1(event.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={skill1}\r\n                />\r\n                {errors.skill1 ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.skill1.properties.message}</span> : \"\"}\r\n            </div>\r\n            <div>\r\n                <label>Skill 2</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setSkill2(event.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={skill2}\r\n                />\r\n                {errors.skill2 ? (<span style={{ color: \"red\", marginLeft: 10 }}>{errors.skill2.properties.message}</span>) : (\"\")}\r\n            </div>\r\n            <div>\r\n                <label>Skill 3</label>\r\n                <input\r\n                    onChange={(event) => {\r\n                        setSkill3(event.target.value);\r\n                    }}\r\n                    type=\"text\"\r\n                    value={skill3}\r\n                />\r\n                {errors.skill3 ? <span style={{ color: \"red\", marginLeft: 10 }}>{errors.skill3.properties.message}</span> : \"\"}\r\n            </div>\r\n            <button>Submit</button>\r\n        </form></div>;\r\n\r\n};\r\n\r\nexport default EditPet;","import React from 'react';\n\nimport { Link, Redirect, Router } from \"@reach/router\";\n\nimport './App.css';\nimport NotFound from \"./views/NotFound\";\nimport Pets from \"./views/Pets\";\nimport Pet from \"./views/Pet\";\nimport NewPet from \"./views/NewPet\";\nimport EditPet from \"./views/EditPet\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div>\n        <Link to=\"/exam\">All Pets</Link>\n        <Link to=\"/exam/new\">New Pet</Link>\n      </div>\n      <Router>\n        <Redirect noThrow=\"true\" from=\"/\" to=\"/exam\"></Redirect>\n        <NotFound default />\n        <Pets path=\"/exam\" />\n        <Pet path=\"/exam/:id\" />\n        <NewPet path=\"/exam/new\" />\n        <EditPet path=\"/exam/:id/edit\" />\n\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}